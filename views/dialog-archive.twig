{% set pathbrowse = false %}
{% set multiselect = true %}
{% set multiselectFilesOnly = false %}

{% extends "flm::dialog-window.twig" %}
{% import "flm::dialog-window.twig" as window %}

{% block heading %}
    <legend>{{ theUILang.fDiagCArchiveSel }}</legend>
{% endblock %}

{% block content %}

 {{ window.pathBrowser(selectedTarget, theUILang.fDiagArchive) }}
<fieldset>
    <legend>Options:</legend>
    <label style="float: left;"> {{ theUILang.fDiagCArchType }}
        <select name="fMan_archtype" id="fMan_archtype">

        </select>
    </label>
    <label style="float: left; margin-left: 10px;">
        {{ theUILang.fDiagCompression }}
        <select name="fman-archive-archcompr" id="fman-archive-archcompr"> </select>
    </label>
    <label style="float: right;" for="fman-archive-multiv"  class="fman-archive-settings-rar">
        {{ theUILang.fDiagCArchVsize }}
        <input name="fman-archive-vsize" id="fman-archive-vsize" class="Textbox num1" type="text" value=""/>
    </label>
    <label style="float: right;" class="fman-archive-settings-rar">
        <input name="fman-archive-multiv" id="fman-archive-multiv" type="checkbox" value="1"
               style="margin-right: 5px; margin-top:8px;"/>
    </label>

    <div>
        <label style="clear:both; float: left; display:none;" class="fman-archive-settings-pass fman-archive-settings-rar">
            Password: <input name="fman-archive-apassword" class="TextboxLarge" type="text" value=""
                             id="fman-archive-apassword"/>
        </label>

        <label style=" float: right; display:none;" class="fman-archive-settings-rar">
            Multi-volume format:
            <select name="fman-archive-arcnscheme" id="fman-archive-arcnscheme" disabled="disabled">
                <option value="new" selected="selected">NEW - .part1.rar</option>
                <option value="old">OLD - .r01</option>
            </select>
        </label>
    </div>

</fieldset>
<div style="clear:both;"></div>
{% endblock %}

{% block scripts %}
<script>
    (function (global) {
        console.log('dialog-archive');
        var dialogs = flm.ui.getDialogs();
        var diagId = dialogs.getDialogId('window');
        var settings = flm.getConfig().archives;

        var archiveType = $("#fMan_archtype");
        var compression = $("#fman-archive-archcompr");
        var password = $("#fman-archive-apassword");
        var volumeSize = $("#fman-archive-vsize");
        var format =  $('#fman-archive-arcnscheme');


        var compressExtMap  = {
            'gzip': 'tar.gz',
            'bzip2': 'tar.bz2'
        };

        if(!flm.manager.hasOwnProperty('doArchive')) {
            // service
            flm.manager.doArchive = function (archive, files, options) {

                var deferred = $.Deferred();
                flm.manager.logStart(theUILang.fStarts.archive);

                if (!archive.length) {
                    deferred.reject(theUILang.fDiagNoPath);
                    return deferred.promise();
                }

                if (!$type(files) || files.length === 0) {
                    deferred.reject('Empty paths');
                    return deferred.promise();
                }

                if (!flm.utils.isValidPath(archive)) {
                    deferred.reject(theUILang.fDiagInvalidname);
                    return deferred.promise();
                }
                var cPath = flm.getCurrentPath();

                return flm.api.createArchive(flm.manager.stripHomePath(archive), flm.manager.getFullPaths(files), options)
                    .then(function (response) {
                            flm.manager.logConsole('archive', files.length + ' files -> ' + archive);
                            flm.Refresh(cPath);
                            return response;
                        },
                        function (response) {
                            return response;
                        });
            };
        }

        dialogs.onStart(function () {


            return flm.manager.doArchive(
                dialogs.getTargetPath(diagId),
                dialogs.getCheckedList(diagId),
                {
                    type: archiveType.val(),
                    compression: compression.val(),
                    password: password.val(),
                    volumeSize: volumeSize.val(),
                    format: format.val()
                }
            );

        });


        var updateArchiveName = function () {

            var type, ext;
            type
                = ext
                = archiveType.val().toLowerCase();
            var level = settings[type].compression[ compression.val()];

            if(type === 'tar')
            {
                ext = compressExtMap.hasOwnProperty(level) ? compressExtMap[level] : ext;
            }

            var file  = dialogs.getTargetPath(diagId);

            var archives = Object.keys(settings);
            archives = $.uniqueSort(archives.concat(Object.values(compressExtMap)));


            file = flm.utils.buildPath([
                flm.utils.basedir(file),
                flm.utils.stripFileExtension(file, archives)
            ]);

            file = flm.utils.trimslashes(file) === "" || flm.utils.trimslashes(file) === flm.utils.trimslashes(flm.getCurrentPath())
                ? flm.ui.browser.getSelectedEntry()
                : file;
            var fileName = file+ '.' + ext;

            dialogs.updateTargetPath(diagId, fileName);
        };

        var updateCompression = function () {

            var type  = archiveType.val().toLowerCase();

            updateArchiveName();

            var notRar = (type !== 'rar');



            if(type === 'rar')
            {
                $('.fman-archive-settings-rar').show();
                $("#fman-archive-vsize").attr("disabled", (!$("#fman-archive-multiv").attr("disabled", notRar).is(':checked') || notRar));
            }

            else
            {
                $('.fman-archive-settings-pass,.fman-archive-settings-rar').hide();

               if(type === 'zip')
                {
                    $('.fman-archive-settings-pass').show();
                }
            }



            compression.empty();
            for (var i = 0; i < settings[type].compression.length; i++) {
                compression.append('<option value="' + i + '">' + theUILang.fManArComp[type][i] + '</option>');
            }
        };

        if(!archiveType.find('option').length)
        {
            for (var type in settings) {
                archiveType.append('<option value="' + type + '">' + type.toUpperCase() + '</option>');
            }
        }

        $("#fman-archive-multiv").change(function () {
            var dis = $(this).is(':checked');
            volumeSize.attr("disabled", !dis);
            format.attr("disabled", !dis);
        });

        archiveType.change(function () {
            updateCompression()
        });

        compression.change(function () {
            updateArchiveName();
        });

        updateCompression();

    })
    (window);
</script>
{% endblock %}

